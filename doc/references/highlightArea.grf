import Gaffer
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["Mix"] = GafferImage.Mix( "Mix" )
parent.addChild( __children["Mix"] )
__children["Mix"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["out"] = GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["out"] )
__children["in"] = GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["in"] )
__children["Grade_Alpha"] = GafferImage.Grade( "Grade_Alpha" )
parent.addChild( __children["Grade_Alpha"] )
__children["Grade_Alpha"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Grade_Color"] = GafferImage.Grade( "Grade_Color" )
parent.addChild( __children["Grade_Color"] )
__children["Grade_Color"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxOut"] = Gaffer.BoxOut( "BoxOut" )
parent.addChild( __children["BoxOut"] )
__children["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["BoxIn"] = Gaffer.BoxIn( "BoxIn" )
parent.addChild( __children["BoxIn"] )
__children["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].setup( GafferImage.ImagePlug( "in", ) )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["enabled"] = Gaffer.BoolPlug( "enabled", defaultValue = True, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["enabled"] )
__children["Blur"] = GafferImage.Blur( "Blur" )
parent.addChild( __children["Blur"] )
__children["Blur"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Grade_Final"] = GafferImage.Grade( "Grade_Final" )
parent.addChild( __children["Grade_Final"] )
__children["Grade_Final"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Alpha"] = Gaffer.FloatPlug( "Alpha", defaultValue = 0.5, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["Alpha"] )
__children["Crop"] = GafferImage.Crop( "Crop" )
parent.addChild( __children["Crop"] )
__children["Crop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["CropArea"] = Gaffer.Box2iPlug( "CropArea", defaultValue = imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["CropArea"] )
__children["BlurRadius"] = Gaffer.V2fPlug( "BlurRadius", defaultValue = imath.V2f( 0, 0 ), minValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["BlurRadius"] )
__children["Mix"]["in"][0].setInput( __children["Grade_Color"]["out"] )
__children["Mix"]["in"][1].setInput( __children["Grade_Alpha"]["out"] )
__children["Mix"]["mask"].setInput( __children["Crop"]["out"] )
__children["Mix"]["__uiPosition"].setValue( imath.V2f( -83.2607422, 6.02491283 ) )
__children["out"].setInput( __children["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["out"], 'layout:index', 4 )
Gaffer.Metadata.registerValue( __children["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["in"], 'noduleLayout:spacing', 2.0 )
Gaffer.Metadata.registerValue( __children["in"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["in"], 'layout:index', 0 )
__children["Grade_Alpha"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Grade_Alpha"]["channels"].setValue( '[RGBA]' )
__children["Grade_Alpha"]["multiply"]["r"].setValue( 0.0 )
__children["Grade_Alpha"]["multiply"]["a"].setValue( 0.0 )
__children["Grade_Alpha"]["multiply"]["g"].setInput( __children["Grade_Alpha"]["multiply"]["r"] )
__children["Grade_Alpha"]["multiply"]["b"].setInput( __children["Grade_Alpha"]["multiply"]["r"] )
__children["Grade_Alpha"]["__uiPosition"].setValue( imath.V2f( -71.7847519, 14.1889753 ) )
__children["Grade_Color"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Grade_Color"]["multiply"]["r"].setValue( 0.0 )
__children["Grade_Color"]["multiply"]["a"].setValue( 0.0 )
__children["Grade_Color"]["multiply"]["g"].setInput( __children["Grade_Color"]["multiply"]["r"] )
__children["Grade_Color"]["multiply"]["b"].setInput( __children["Grade_Color"]["multiply"]["r"] )
__children["Grade_Color"]["__uiPosition"].setValue( imath.V2f( -84.7607422, 14.1889753 ) )
__children["BoxOut"]["in"].setInput( __children["Merge"]["out"] )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
__children["BoxOut"]["passThrough"].setInput( __children["BoxIn"]["out"] )
__children["BoxOut"]["enabled"].setInput( __children["enabled"] )
__children["BoxOut"]["__uiPosition"].setValue( imath.V2f( -73.2847519, -21.799305 ) )
__children["BoxIn"]["__in"].setInput( __children["in"] )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'labelPlugValueWidget:renameable', True )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["BoxIn"]["__uiPosition"].setValue( imath.V2f( -71.7847519, 30.9731579 ) )
__children["Merge"]["in"][0].setInput( __children["Dot"]["out"] )
__children["Merge"]["in"][1].setInput( __children["Blur"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( -90.3103256, -13.4672728 ) )
__children["Dot"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( -93.3103256, 14.2793617 ) )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:section', 'Node' )
Gaffer.Metadata.registerValue( __children["enabled"], 'layout:index', 5 )
__children["Blur"]["in"].setInput( __children["Grade_Final"]["out"] )
__children["Blur"]["radius"].setInput( __children["BlurRadius"] )
__children["Blur"]["boundingMode"].setValue( 1 )
__children["Blur"]["__uiPosition"].setValue( imath.V2f( -83.2607422, -5.30321074 ) )
__children["Grade_Final"]["in"].setInput( __children["Mix"]["out"] )
__children["Grade_Final"]["channels"].setValue( '[RGBA]' )
__children["Grade_Final"]["multiply"]["a"].setInput( __children["Alpha"] )
__children["Grade_Final"]["__uiPosition"].setValue( imath.V2f( -83.2607422, 0.360851288 ) )
Gaffer.Metadata.registerValue( __children["Alpha"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Alpha"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["Alpha"], 'layout:index', 2 )
Gaffer.Metadata.registerValue( __children["Alpha"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Alpha"], 'description', 'Opacity of the darkended area.' )
__children["Crop"]["in"].setInput( __children["BoxIn"]["out"] )
__children["Crop"]["area"].setInput( __children["CropArea"] )
__children["Crop"]["__uiPosition"].setValue( imath.V2f( -58.6566238, 14.2177343 ) )
Gaffer.Metadata.registerValue( __children["CropArea"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["CropArea"], 'description', 'Size and position of the highlight area, in relative pixels.' )
Gaffer.Metadata.registerValue( __children["CropArea"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["CropArea"], 'layout:index', 1 )
Gaffer.Metadata.registerValue( __children["BlurRadius"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["BlurRadius"], 'description', 'Amount to blur the highlight area edges, in relative pixels.' )
Gaffer.Metadata.registerValue( __children["BlurRadius"], 'layout:section', 'Settings' )
Gaffer.Metadata.registerValue( __children["BlurRadius"], 'layout:index', 3 )
Gaffer.Metadata.registerValue( __children["BlurRadius"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["BlurRadius"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( parent, 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( parent, 'description', 'Highlights a scalable area of the image by darkening the region outside that area. The edge of the area can be blurred.' )
Gaffer.Metadata.registerValue( parent, 'documentation:url', '' )


del __children

