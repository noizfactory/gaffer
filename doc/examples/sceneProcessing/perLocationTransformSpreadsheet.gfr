import Gaffer
import GafferImage
import GafferScene
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Backdrop_TitleBG"] = Gaffer.Backdrop( "Backdrop_TitleBG" )
parent.addChild( __children["Backdrop_TitleBG"] )
__children["Backdrop_TitleBG"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_TitleBG"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Transform"] = GafferScene.Transform( "Transform" )
parent.addChild( __children["Transform"] )
__children["Transform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"] = Gaffer.Box( "Gaffy" )
parent.addChild( __children["Gaffy"] )
__children["Gaffy"].addChild( GafferScene.SceneReader( "SceneReader" ) )
__children["Gaffy"]["SceneReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( GafferScene.ScenePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Gaffy"]["BoxOut"].setup( GafferScene.ScenePlug( "in", ) )
__children["Gaffy"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Gaffy"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["PathFilter"] = GafferScene.PathFilter( "PathFilter" )
parent.addChild( __children["PathFilter"] )
__children["PathFilter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Spreadsheet"] = Gaffer.Spreadsheet( "Spreadsheet" )
parent.addChild( __children["Spreadsheet"] )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.V3fPlug( "rotate", defaultValue = imath.V3f( 0, 0, 0 ), ) )
__children["Spreadsheet"]["rows"].addRows( 5 )
__children["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Title"] = Gaffer.Backdrop( "Backdrop_Title" )
parent.addChild( __children["Backdrop_Title"] )
__children["Backdrop_Title"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Title"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip"] = Gaffer.Backdrop( "Backdrop_Tip" )
parent.addChild( __children["Backdrop_Tip"] )
__children["Backdrop_Tip"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip1"] = Gaffer.Backdrop( "Backdrop_Tip1" )
parent.addChild( __children["Backdrop_Tip1"] )
__children["Backdrop_Tip1"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip1"].addChild( Gaffer.Box2fPlug( "__uiBound1", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip2"] = Gaffer.Backdrop( "Backdrop_Tip2" )
parent.addChild( __children["Backdrop_Tip2"] )
__children["Backdrop_Tip2"].addChild( Gaffer.Box2fPlug( "__uiBound", defaultValue = imath.Box2f( imath.V2f( -10, -10 ), imath.V2f( 10, 10 ) ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Backdrop_Tip2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["frame"].setValue( 33.0 )
parent["variables"]["imageCataloguePort"]["value"].setValue( 58280 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Backdrop_TitleBG"]["title"].setValue( '' )
__children["Backdrop_TitleBG"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -9.49428558, -44.2659302 ), imath.V2f( 46.4567719, 10 ) ) )
__children["Backdrop_TitleBG"]["__uiPosition"].setValue( imath.V2f( -27.4000015, 1.4925909 ) )
__children["Transform"]["in"].setInput( __children["Gaffy"]["out"] )
__children["Transform"]["filter"].setInput( __children["PathFilter"]["out"] )
__children["Transform"]["transform"]["rotate"].setInput( __children["Spreadsheet"]["out"]["rotate"] )
__children["Transform"]["__uiPosition"].setValue( imath.V2f( -19.0966606, -33.9238586 ) )
__children["Gaffy"]["SceneReader"]["fileName"].setValue( '${GAFFER_ROOT}/resources/gafferBot/caches/gafferBot.scc' )
__children["Gaffy"]["SceneReader"]["__uiPosition"].setValue( imath.V2f( -24.1969833, -22.8664799 ) )
__children["Gaffy"]["out"].setInput( __children["Gaffy"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Gaffy"]["out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Gaffy"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Gaffy"]["out"], 'description', 'The output scene.' )
__children["Gaffy"]["BoxOut"]["in"].setInput( __children["Gaffy"]["SceneReader"]["out"] )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["__out"], 'nodule:color', imath.Color3f( 0.240099996, 0.339399993, 0.485000014 ) )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["__out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Gaffy"]["BoxOut"]["__out"], 'description', 'The output scene.' )
__children["Gaffy"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -22.6963253, -31.1985111 ) )
__children["Gaffy"]["__uiPosition"].setValue( imath.V2f( -17.5966606, -25.5918255 ) )
__children["PathFilter"]["paths"].setInput( __children["Spreadsheet"]["enabledRowNames"] )
__children["PathFilter"]["__uiPosition"].setValue( imath.V2f( -3.42518687, -29.7418251 ) )
__children["Spreadsheet"]["selector"].setValue( '${scene:path}' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["selector"], 'readOnly', True )
__children["Spreadsheet"]["rows"][1]["name"].setValue( '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP' )
__children["Spreadsheet"]["rows"][1]["cells"]["rotate"]["value"].setValue( imath.V3f( -30, 0, 0 ) )
__children["Spreadsheet"]["rows"][2]["name"].setValue( '/GAFFERBOT/C_torso_GRP/L_armUpper_GRP/L_armLower_GRP' )
__children["Spreadsheet"]["rows"][2]["cells"]["rotate"]["value"].setValue( imath.V3f( -55, 0, 0 ) )
__children["Spreadsheet"]["rows"][3]["name"].setValue( '/GAFFERBOT/C_torso_GRP/R_legUpper_GRP' )
__children["Spreadsheet"]["rows"][3]["cells"]["rotate"]["value"].setValue( imath.V3f( -35, 0, 0 ) )
__children["Spreadsheet"]["rows"][4]["name"].setValue( '/GAFFERBOT/C_torso_GRP/R_legUpper_GRP/R_legLower_GRP' )
__children["Spreadsheet"]["rows"][4]["cells"]["rotate"]["value"].setValue( imath.V3f( 55, 0, 0 ) )
__children["Spreadsheet"]["rows"][5]["name"].setValue( '/GAFFERBOT/C_torso_GRP/C_head_GRP' )
__children["Spreadsheet"]["rows"][5]["cells"]["rotate"]["value"].setValue( imath.V3f( 0, 35, 0 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0], 'spreadsheet:rowNameWidth', 300 )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["rotate"]["value"], 'nodule:color', imath.Color3f( 0.469999999, 0.180999994, 0.180999994 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["rotate"]["value"]["x"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["rotate"]["value"]["y"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["rotate"]["value"]["z"], 'nodule:color', imath.Color3f( 0.246700004, 0.376199991, 0.469999999 ) )
__children["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( 9.22404766, -34.0332947 ) )
__children["Backdrop_Title"]["title"].setValue( 'Example: Per-location Transform Spreadsheet' )
__children["Backdrop_Title"]["description"].setValue( 'In this example, an asset has specific locations rotated by one network of a Transform, PathFilter, and Spreadsheet node. This is accomplished by setting the Spreadsheet node up to apply per-location transform values.\n\nSpecific, per-location variation can be achieved by setting the selector to \\${scenePath} and connecting the Paths plug of the network\'s PathFilter node(s) to the spreadsheet in a special manner. Each row then drives a path in the filter to ensure other location are not affected. This way, each row dictates which location - or location pattern, if the path matching syntax is used - to filter. This effectively maps a set of values to each location.\n\nFor the full details on per-location variation with spreadsheets, see the "Spreadsheet Node" article in the main documentation.' )
__children["Backdrop_Title"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -26.1708813 ), imath.V2f( 30, 10 ) ) )
__children["Backdrop_Title"]["__uiPosition"].setValue( imath.V2f( -19.0039406, 1.4623704 ) )
Gaffer.Metadata.registerValue( __children["Backdrop_Tip"], 'nodeGadget:color', imath.Color3f( 0.300000012, 0.5, 0.460500002 ) )
__children["Backdrop_Tip"]["title"].setValue( '' )
__children["Backdrop_Tip"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -15.1441078 ), imath.V2f( 31.9457626, 19.6277027 ) ) )
__children["Backdrop_Tip"]["__uiPosition"].setValue( imath.V2f( 30.6052666, -27.5567017 ) )
Gaffer.Metadata.registerValue( __children["Backdrop_Tip1"], 'nodeGadget:color', imath.Color3f( 0.300000012, 0.5, 0.460500002 ) )
__children["Backdrop_Tip1"]["title"].setValue( 'Tip: Copying scene paths' )
__children["Backdrop_Tip1"]["description"].setValue( "Once a spreadsheet is set up to drive a PathFilter node's paths plugs, you can save time by creating new rows directly based on location paths.\n\nTo copy scene paths as rows:\n\n1. Double-click the Spreadsheet node to open a Node Editor window focused on it.\n2. Select the node affected by the spreadsheet.\n3. In the Hierarchy View, select one or more locations.\n4. Click and drag the locations onto the add row button (+). For each location you dragged, a new row will be added, and will contain one of the paths." )
__children["Backdrop_Tip1"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -15.1441078 ), imath.V2f( 20, 19.5885277 ) ) )
__children["Backdrop_Tip1"]["__uiPosition"].setValue( imath.V2f( 74.1388779, -27.5825119 ) )
Gaffer.Metadata.registerValue( __children["Backdrop_Tip2"], 'nodeGadget:color', imath.Color3f( 0.300000012, 0.5, 0.460500002 ) )
__children["Backdrop_Tip2"]["title"].setValue( 'Tip: Driving PathFilter node paths' )
__children["Backdrop_Tip2"]["description"].setValue( "To ensure the Transform node only affects locations that match the spreadsheet rows, you must connect the paths plug of a PathFilter plug to the Spreadsheet:\n\n1. Select the PathFilter node.\n2. In the Node Editor, click the gear button, then select Create Spreadsheet or Connect to Spreadsheet > [spreadsheet name] from the context menu.\n\nThe spreadsheet's rows will now define the filter's paths, and the Selector plug will automatically be driven as `\\$\\{scene:path\\}`." )
__children["Backdrop_Tip2"]["__uiBound"].setValue( imath.Box2f( imath.V2f( -10, -15.1441078 ), imath.V2f( 20, 19.5210552 ) ) )
__children["Backdrop_Tip2"]["__uiPosition"].setValue( imath.V2f( 36.1496239, -27.5471878 ) )


del __children

