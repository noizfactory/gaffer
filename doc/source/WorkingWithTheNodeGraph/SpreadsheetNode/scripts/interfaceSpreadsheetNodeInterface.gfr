import Gaffer
import GafferCycles
import GafferImage
import GafferScene
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 1, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 2, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["Spreadsheet"] = Gaffer.Spreadsheet( "Spreadsheet" )
parent.addChild( __children["Spreadsheet"] )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.Color3fPlug( "irradiance", defaultValue = imath.Color3f( 1, 1, 1 ), ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.V3fPlug( "rotate", defaultValue = imath.V3f( 0, 0, 0 ), ) )
__children["Spreadsheet"]["rows"].addRows( 3 )
__children["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["distant_light"] = GafferCycles.CyclesLight( "distant_light" )
parent.addChild( __children["distant_light"] )
__children["distant_light"].loadShader( "distant_light" )
__children["distant_light"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 42815 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Spreadsheet"]["selector"].setValue( '${sequence}' )
__children["Spreadsheet"]["rows"][0]["cells"]["rotate"]["value"].setValue( imath.V3f( -90, 0, 0 ) )
__children["Spreadsheet"]["rows"][1]["name"].setValue( 'SEQ-1' )
__children["Spreadsheet"]["rows"][1]["cells"]["irradiance"]["value"].setValue( imath.Color3f( 0.920000017, 0.930000007, 1 ) )
__children["Spreadsheet"]["rows"][1]["cells"]["rotate"]["value"].setValue( imath.V3f( -67, 47.5, 0 ) )
__children["Spreadsheet"]["rows"][2]["name"].setValue( 'SEQ-2' )
__children["Spreadsheet"]["rows"][2]["cells"]["irradiance"]["value"].setValue( imath.Color3f( 1, 0.930000007, 0.879999995 ) )
__children["Spreadsheet"]["rows"][2]["cells"]["rotate"]["value"].setValue( imath.V3f( -67, 47.5, -35.2999992 ) )
__children["Spreadsheet"]["rows"][3]["name"].setValue( 'SEQ-3' )
__children["Spreadsheet"]["rows"][3]["cells"]["irradiance"]["value"].setValue( imath.Color3f( 1, 0.709999979, 0.419999987 ) )
__children["Spreadsheet"]["rows"][3]["cells"]["rotate"]["value"].setValue( imath.V3f( -67, 47.5, -55.5 ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["irradiance"], 'spreadsheet:columnLabel', 'Sun color' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["rotate"], 'spreadsheet:columnLabel', 'Sun angle' )
__children["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( -4.26998138, 7.08174467 ) )
__children["distant_light"]["transform"]["rotate"].setInput( __children["Spreadsheet"]["out"]["rotate"] )
__children["distant_light"]["parameters"]["color"].setInput( __children["Spreadsheet"]["out"]["irradiance"] )
__children["distant_light"]["__uiPosition"].setValue( imath.V2f( -4.27087402, 0 ) )


del __children

