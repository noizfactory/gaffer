import Gaffer
import GafferDispatch
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["ImageReader"] = GafferImage.ImageReader( "ImageReader" )
parent.addChild( __children["ImageReader"] )
__children["ImageReader"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"] = GafferImage.ImageWriter( "ImageWriter" )
parent.addChild( __children["ImageWriter"] )
__children["ImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Constant"] = GafferImage.Constant( "Constant" )
parent.addChild( __children["Constant"] )
__children["Constant"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Express"] = Gaffer.Expression( "Express" )
parent.addChild( __children["Express"] )
__children["Express"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p0", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Express"]["__out"].addChild( GafferImage.FormatPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Express"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DashedRectangle_RowDefault"] = Gaffer.Reference( "DashedRectangle_RowDefault" )
parent.addChild( __children["DashedRectangle_RowDefault"] )
__children["DashedRectangle_RowDefault"].load( "rectangleDashed.grf" )
__children["DashedRectangle_RowDefault"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_RowDefaultLine"] = GafferImage.Rectangle( "Rectangle_RowDefaultLine" )
parent.addChild( __children["Rectangle_RowDefaultLine"] )
__children["Rectangle_RowDefaultLine"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TextHeading_RowDefault"] = Gaffer.Reference( "TextHeading_RowDefault" )
parent.addChild( __children["TextHeading_RowDefault"] )
__children["TextHeading_RowDefault"].load( "textHeading.grf" )
__children["TextHeading_RowDefault"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["DashedRectangle_Row"] = Gaffer.Reference( "DashedRectangle_Row" )
parent.addChild( __children["DashedRectangle_Row"] )
__children["DashedRectangle_Row"].load( "rectangleDashed.grf" )
__children["DashedRectangle_Row"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_RowLine"] = GafferImage.Rectangle( "Rectangle_RowLine" )
parent.addChild( __children["Rectangle_RowLine"] )
__children["Rectangle_RowLine"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TextHeading_Row"] = Gaffer.Reference( "TextHeading_Row" )
parent.addChild( __children["TextHeading_Row"] )
__children["TextHeading_Row"].load( "textHeading.grf" )
__children["TextHeading_Row"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Pattern"] = GafferImage.Rectangle( "Rectangle_Pattern" )
parent.addChild( __children["Rectangle_Pattern"] )
__children["Rectangle_Pattern"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_PatternLine"] = GafferImage.Rectangle( "Rectangle_PatternLine" )
parent.addChild( __children["Rectangle_PatternLine"] )
__children["Rectangle_PatternLine"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TextHeading_Pattern"] = Gaffer.Reference( "TextHeading_Pattern" )
parent.addChild( __children["TextHeading_Pattern"] )
__children["TextHeading_Pattern"].load( "textHeading.grf" )
__children["TextHeading_Pattern"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Selector"] = GafferImage.Rectangle( "Rectangle_Selector" )
parent.addChild( __children["Rectangle_Selector"] )
__children["Rectangle_Selector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_SelectorLine"] = GafferImage.Rectangle( "Rectangle_SelectorLine" )
parent.addChild( __children["Rectangle_SelectorLine"] )
__children["Rectangle_SelectorLine"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TextHeading_Selector"] = Gaffer.Reference( "TextHeading_Selector" )
parent.addChild( __children["TextHeading_Selector"] )
__children["TextHeading_Selector"].load( "textHeading.grf" )
__children["TextHeading_Selector"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"] = Gaffer.Box( "Rectangle_Column" )
parent.addChild( __children["Rectangle_Column"] )
__children["Rectangle_Column"].addChild( GafferImage.Rectangle( "Rectangle" ) )
__children["Rectangle_Column"]["Rectangle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( GafferImage.Clamp( "Clamp" ) )
__children["Rectangle_Column"]["Clamp"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( GafferImage.ImagePlug( "in", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( GafferImage.Merge( "Merge" ) )
__children["Rectangle_Column"]["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( GafferImage.ImagePlug( "out", direction = Gaffer.Plug.Direction.Out, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( GafferImage.Crop( "Crop" ) )
__children["Rectangle_Column"]["Crop"]["user"].addChild( Gaffer.FloatPlug( "minX", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Crop"]["user"].addChild( Gaffer.FloatPlug( "maxX", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Crop"]["user"].addChild( Gaffer.FloatPlug( "minY", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Crop"]["user"].addChild( Gaffer.FloatPlug( "maxY", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Crop"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( Gaffer.Expression( "Expression1" ) )
__children["Rectangle_Column"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p0", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p1", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Expression1"]["__in"].addChild( GafferImage.AtomicFormatPlug( "p2", defaultValue = GafferImage.Format(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p3", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Expression1"]["__in"].addChild( Gaffer.FloatPlug( "p4", defaultValue = 0.0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Expression1"]["__out"].addChild( Gaffer.Box2iPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = imath.Box2i(), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"]["Expression1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( Gaffer.BoxIn( "BoxIn" ) )
__children["Rectangle_Column"]["BoxIn"].setup( GafferImage.ImagePlug( "out", ) )
__children["Rectangle_Column"]["BoxIn"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( Gaffer.BoxOut( "BoxOut" ) )
__children["Rectangle_Column"]["BoxOut"].setup( GafferImage.ImagePlug( "in", ) )
__children["Rectangle_Column"]["BoxOut"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_Column"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Rectangle_ColumnLine"] = GafferImage.Rectangle( "Rectangle_ColumnLine" )
parent.addChild( __children["Rectangle_ColumnLine"] )
__children["Rectangle_ColumnLine"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["TextHeading_Column"] = Gaffer.Reference( "TextHeading_Column" )
parent.addChild( __children["TextHeading_Column"] )
__children["TextHeading_Column"].load( "textHeading.grf" )
__children["TextHeading_Column"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"] = GafferImage.Shuffle( "Shuffle" )
parent.addChild( __children["Shuffle"] )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 51086 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["ImageReader"]["refreshCount"].setValue( 14 )
__children["ImageReader"]["colorSpace"].setValue( 'scene_linear' )
__children["ImageReader"]["__uiPosition"].setValue( imath.V2f( -28.6672916, 18.7073669 ) )
__children["ImageWriter"]["in"].setInput( __children["TextHeading_Column"]["out"] )
__children["ImageWriter"]["colorSpace"].setValue( 'scene_linear' )
__children["ImageWriter"]["__uiPosition"].setValue( imath.V2f( -35.1417694, -130.933273 ) )
__children["Constant"]["format"].setInput( __children["Express"]["__out"]["p0"] )
Gaffer.Metadata.registerValue( __children["Constant"]["format"], 'formatPlugValueWidget:mode', 'custom' )
__children["Constant"]["color"].setValue( imath.Color4f( 0.136999995, 0.136999995, 0.136999995, 1 ) )
__children["Constant"]["__uiPosition"].setValue( imath.V2f( -41.6653671, 10.5433083 ) )
__children["Merge"]["in"][0].setInput( __children["Constant"]["out"] )
__children["Merge"]["in"][1].setInput( __children["Shuffle"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( -33.6630058, 2.37923741 ) )
__children["Express"]["__in"]["p0"].setInput( __children["ImageReader"]["out"]["format"] )
__children["Express"]["__uiPosition"].setValue( imath.V2f( -20.6653671, 10.5436993 ) )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'description', 'Renders a dashed rectangle with adjustable line width, corner radius, drop shadow and transform.' )
Gaffer.Metadata.registerValue( __children["DashedRectangle_RowDefault"], 'documentation:url', '' )
__children["DashedRectangle_RowDefault"]["out"].setInput( __children["DashedRectangle_RowDefault"]["BoxOut"]["__out"] )
__children["DashedRectangle_RowDefault"]["in"].setInput( __children["Merge"]["out"] )
__children["DashedRectangle_RowDefault"]["color"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["DashedRectangle_RowDefault"]["dashLength"].setValue( 15.0 )
__children["DashedRectangle_RowDefault"]["area"].setValue( imath.Box2f( imath.V2f( 140, 237 ), imath.V2f( 394, 259 ) ) )
__children["DashedRectangle_RowDefault"]["lineWidth"].setValue( 2.0 )
__children["DashedRectangle_RowDefault"]["__uiPosition"].setValue( imath.V2f( -33.6602669, -5.9528017 ) )
__children["Rectangle_RowDefaultLine"]["out"].setInput( __children["Rectangle_RowDefaultLine"]["__merge"]["out"] )
__children["Rectangle_RowDefaultLine"]["in"].setInput( __children["DashedRectangle_RowDefault"]["out"] )
__children["Rectangle_RowDefaultLine"]["color"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["Rectangle_RowDefaultLine"]["area"].setValue( imath.Box2f( imath.V2f( 396, 248 ), imath.V2f( 418, 248 ) ) )
__children["Rectangle_RowDefaultLine"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_RowDefaultLine"]["__uiPosition"].setValue( imath.V2f( -33.6602745, -14.284833 ) )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'description', 'Adds text to an image, with additional heading control. The first line can be formatted differently to appear like a heading.\n\nHeading can be colored separately. If the Heading Font plug points to a font file on disk, the first line of the text will be in that font. If left blank, it will fall back to the font determined by the Body Font plug.' )
Gaffer.Metadata.registerValue( __children["TextHeading_RowDefault"], 'documentation:url', '' )
__children["TextHeading_RowDefault"]["out"].setInput( __children["TextHeading_RowDefault"]["BoxOut"]["__out"] )
__children["TextHeading_RowDefault"]["in"].setInput( __children["Rectangle_RowDefaultLine"]["out"] )
__children["TextHeading_RowDefault"]["text"].setValue( 'Default row:\nThe fallback row. If none of the rows match, these values apply.' )
__children["TextHeading_RowDefault"]["Translate"].setValue( imath.V2f( 423, -44 ) )
__children["TextHeading_RowDefault"]["headingFont"].setValue( 'VeraBd.ttf' )
__children["TextHeading_RowDefault"]["headingColor"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["TextHeading_RowDefault"]["bodyColor"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["TextHeading_RowDefault"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 300, 300 ) ) )
__children["TextHeading_RowDefault"]["__uiPosition"].setValue( imath.V2f( -33.6602707, -22.6168633 ) )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'description', 'Renders a dashed rectangle with adjustable line width, corner radius, drop shadow and transform.' )
Gaffer.Metadata.registerValue( __children["DashedRectangle_Row"], 'documentation:url', '' )
__children["DashedRectangle_Row"]["out"].setInput( __children["DashedRectangle_Row"]["BoxOut"]["__out"] )
__children["DashedRectangle_Row"]["in"].setInput( __children["TextHeading_RowDefault"]["out"] )
__children["DashedRectangle_Row"]["color"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["DashedRectangle_Row"]["dashLength"].setValue( 15.0 )
__children["DashedRectangle_Row"]["area"].setValue( imath.Box2f( imath.V2f( 13, 156 ), imath.V2f( 394, 178 ) ) )
__children["DashedRectangle_Row"]["lineWidth"].setValue( 2.0 )
__children["DashedRectangle_Row"]["__uiPosition"].setValue( imath.V2f( -33.6602783, -31.1168633 ) )
__children["Rectangle_RowLine"]["out"].setInput( __children["Rectangle_RowLine"]["__merge"]["out"] )
__children["Rectangle_RowLine"]["in"].setInput( __children["DashedRectangle_Row"]["out"] )
__children["Rectangle_RowLine"]["color"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["Rectangle_RowLine"]["area"].setValue( imath.Box2f( imath.V2f( 396, 167 ), imath.V2f( 418, 167 ) ) )
__children["Rectangle_RowLine"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_RowLine"]["__uiPosition"].setValue( imath.V2f( -33.6602783, -39.4488945 ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'description', 'Adds text to an image, with additional heading control. The first line can be formatted differently to appear like a heading.\n\nHeading can be colored separately. If the Heading Font plug points to a font file on disk, the first line of the text will be in that font. If left blank, it will fall back to the font determined by the Body Font plug.' )
Gaffer.Metadata.registerValue( __children["TextHeading_Row"], 'documentation:url', '' )
__children["TextHeading_Row"]["out"].setInput( __children["TextHeading_Row"]["BoxOut"]["__out"] )
__children["TextHeading_Row"]["in"].setInput( __children["Rectangle_RowLine"]["out"] )
__children["TextHeading_Row"]["text"].setValue( "Row:\nConsists of a pattern, an enabled switch, and plug values. If the pattern matches the selector, the row's values apply." )
__children["TextHeading_Row"]["Translate"].setValue( imath.V2f( 423, -125 ) )
__children["TextHeading_Row"]["headingFont"].setValue( 'VeraBd.ttf' )
__children["TextHeading_Row"]["headingColor"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["TextHeading_Row"]["bodyColor"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["TextHeading_Row"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 300, 300 ) ) )
__children["TextHeading_Row"]["__uiPosition"].setValue( imath.V2f( -33.6602783, -47.7809258 ) )
__children["Rectangle_Pattern"]["out"].setInput( __children["Rectangle_Pattern"]["__merge"]["out"] )
__children["Rectangle_Pattern"]["in"].setInput( __children["TextHeading_Row"]["out"] )
__children["Rectangle_Pattern"]["color"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["Rectangle_Pattern"]["area"].setValue( imath.Box2f( imath.V2f( 13, 159 ), imath.V2f( 136, 175 ) ) )
__children["Rectangle_Pattern"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_Pattern"]["cornerRadius"].setValue( 4.0 )
__children["Rectangle_Pattern"]["__uiPosition"].setValue( imath.V2f( -33.6602783, -56.112957 ) )
__children["Rectangle_PatternLine"]["out"].setInput( __children["Rectangle_PatternLine"]["__merge"]["out"] )
__children["Rectangle_PatternLine"]["in"].setInput( __children["Rectangle_Pattern"]["out"] )
__children["Rectangle_PatternLine"]["color"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["Rectangle_PatternLine"]["area"].setValue( imath.Box2f( imath.V2f( 38, 132 ), imath.V2f( 38, 159 ) ) )
__children["Rectangle_PatternLine"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_PatternLine"]["__uiPosition"].setValue( imath.V2f( -33.6602783, -64.2770233 ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'description', 'Adds text to an image, with additional heading control. The first line can be formatted differently to appear like a heading.\n\nHeading can be colored separately. If the Heading Font plug points to a font file on disk, the first line of the text will be in that font. If left blank, it will fall back to the font determined by the Body Font plug.' )
Gaffer.Metadata.registerValue( __children["TextHeading_Pattern"], 'documentation:url', '' )
__children["TextHeading_Pattern"]["out"].setInput( __children["TextHeading_Pattern"]["BoxOut"]["__out"] )
__children["TextHeading_Pattern"]["in"].setInput( __children["Rectangle_PatternLine"]["out"] )
__children["TextHeading_Pattern"]["text"].setValue( 'Pattern:\nThe row condition. A string.' )
__children["TextHeading_Pattern"]["Translate"].setValue( imath.V2f( 13, -172 ) )
__children["TextHeading_Pattern"]["headingFont"].setValue( 'VeraBd.ttf' )
__children["TextHeading_Pattern"]["headingColor"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["TextHeading_Pattern"]["bodyColor"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["TextHeading_Pattern"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 120, 300 ) ) )
__children["TextHeading_Pattern"]["__uiPosition"].setValue( imath.V2f( -33.6602783, -72.6090546 ) )
__children["Rectangle_Selector"]["out"].setInput( __children["Rectangle_Selector"]["__merge"]["out"] )
__children["Rectangle_Selector"]["in"].setInput( __children["TextHeading_Pattern"]["out"] )
__children["Rectangle_Selector"]["color"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["Rectangle_Selector"]["area"].setValue( imath.Box2f( imath.V2f( 163, 297 ), imath.V2f( 404, 317 ) ) )
__children["Rectangle_Selector"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_Selector"]["cornerRadius"].setValue( 4.0 )
__children["Rectangle_Selector"]["__uiPosition"].setValue( imath.V2f( -33.6417694, -80.9410858 ) )
__children["Rectangle_SelectorLine"]["out"].setInput( __children["Rectangle_SelectorLine"]["__merge"]["out"] )
__children["Rectangle_SelectorLine"]["in"].setInput( __children["Rectangle_Selector"]["out"] )
__children["Rectangle_SelectorLine"]["color"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["Rectangle_SelectorLine"]["area"].setValue( imath.Box2f( imath.V2f( 0, 0 ), imath.V2f( 18, 0 ) ) )
__children["Rectangle_SelectorLine"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_SelectorLine"]["transform"]["translate"].setValue( imath.V2f( 405, 307 ) )
__children["Rectangle_SelectorLine"]["transform"]["rotate"].setValue( 45.0 )
__children["Rectangle_SelectorLine"]["__uiPosition"].setValue( imath.V2f( -33.6417694, -89.1051483 ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'description', 'Adds text to an image, with additional heading control. The first line can be formatted differently to appear like a heading.\n\nHeading can be colored separately. If the Heading Font plug points to a font file on disk, the first line of the text will be in that font. If left blank, it will fall back to the font determined by the Body Font plug.' )
Gaffer.Metadata.registerValue( __children["TextHeading_Selector"], 'documentation:url', '' )
__children["TextHeading_Selector"]["out"].setInput( __children["TextHeading_Selector"]["BoxOut"]["__out"] )
__children["TextHeading_Selector"]["in"].setInput( __children["Rectangle_SelectorLine"]["out"] )
__children["TextHeading_Selector"]["text"].setValue( 'Selector:\nString to match to patterns. During computation, matches against patterns from top to bottom. Substitutes Context Variables.' )
__children["TextHeading_Selector"]["Translate"].setValue( imath.V2f( 423, 28 ) )
__children["TextHeading_Selector"]["headingFont"].setValue( 'VeraBd.ttf' )
__children["TextHeading_Selector"]["headingColor"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["TextHeading_Selector"]["bodyColor"].setValue( imath.Color4f( 0.964699984, 0.57249999, 0.114, 1 ) )
__children["TextHeading_Selector"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 300, 300 ) ) )
__children["TextHeading_Selector"]["__uiPosition"].setValue( imath.V2f( -33.6417694, -97.4371796 ) )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"], 'noduleLayout:customGadget:addButtonRight:visible', False )
__children["Rectangle_Column"]["Rectangle"]["out"].setInput( __children["Rectangle_Column"]["Rectangle"]["__merge"]["out"] )
__children["Rectangle_Column"]["Rectangle"]["in"].setInput( __children["Rectangle_Column"]["Clamp"]["out"] )
__children["Rectangle_Column"]["Rectangle"]["color"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["Rectangle_Column"]["Rectangle"]["area"].setValue( imath.Box2f( imath.V2f( 188, 141 ), imath.V2f( 299, 255 ) ) )
__children["Rectangle_Column"]["Rectangle"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_Column"]["Rectangle"]["cornerRadius"].setValue( 30.0 )
__children["Rectangle_Column"]["Rectangle"]["__uiPosition"].setValue( imath.V2f( -30.6417694, -113.933266 ) )
__children["Rectangle_Column"]["Clamp"]["in"].setInput( __children["Rectangle_Column"]["BoxIn"]["out"] )
__children["Rectangle_Column"]["Clamp"]["channels"].setValue( '[RGBA]' )
__children["Rectangle_Column"]["Clamp"]["max"].setValue( imath.Color4f( 0, 0, 0, 0 ) )
__children["Rectangle_Column"]["Clamp"]["maxClampTo"].setValue( imath.Color4f( 0, 0, 0, 0 ) )
__children["Rectangle_Column"]["Clamp"]["__uiPosition"].setValue( imath.V2f( -30.6417694, -105.769203 ) )
__children["Rectangle_Column"]["in"].setInput( __children["TextHeading_Selector"]["out"] )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["in"], 'noduleLayout:spacing', 2.0 )
__children["Rectangle_Column"]["Merge"]["in"][0].setInput( __children["Rectangle_Column"]["BoxIn"]["out"] )
__children["Rectangle_Column"]["Merge"]["in"][1].setInput( __children["Rectangle_Column"]["Crop"]["out"] )
__children["Rectangle_Column"]["Merge"]["operation"].setValue( 8 )
__children["Rectangle_Column"]["Merge"]["__uiPosition"].setValue( imath.V2f( -30.6417694, -130.261383 ) )
__children["Rectangle_Column"]["out"].setInput( __children["Rectangle_Column"]["BoxOut"]["__out"] )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["out"], 'description', 'The output image generated by this node.' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["Crop"]["user"]["minX"], 'nodule:type', '' )
__children["Rectangle_Column"]["Crop"]["user"]["maxX"].setValue( 1.0 )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["Crop"]["user"]["maxX"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["Crop"]["user"]["minY"], 'nodule:type', '' )
__children["Rectangle_Column"]["Crop"]["user"]["maxY"].setValue( 0.4000000059604645 )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["Crop"]["user"]["maxY"], 'nodule:type', '' )
__children["Rectangle_Column"]["Crop"]["in"].setInput( __children["Rectangle_Column"]["Rectangle"]["out"] )
__children["Rectangle_Column"]["Crop"]["area"].setInput( __children["Rectangle_Column"]["Expression1"]["__out"]["p0"] )
__children["Rectangle_Column"]["Crop"]["affectDisplayWindow"].setValue( False )
__children["Rectangle_Column"]["Crop"]["__uiPosition"].setValue( imath.V2f( -30.6417694, -122.097328 ) )
__children["Rectangle_Column"]["Expression1"]["__in"]["p0"].setInput( __children["Rectangle_Column"]["Crop"]["user"]["maxY"] )
__children["Rectangle_Column"]["Expression1"]["__in"]["p1"].setInput( __children["Rectangle_Column"]["Crop"]["user"]["maxX"] )
__children["Rectangle_Column"]["Expression1"]["__in"]["p2"].setInput( __children["Rectangle_Column"]["Crop"]["in"]["format"] )
__children["Rectangle_Column"]["Expression1"]["__in"]["p3"].setInput( __children["Rectangle_Column"]["Crop"]["user"]["minY"] )
__children["Rectangle_Column"]["Expression1"]["__in"]["p4"].setInput( __children["Rectangle_Column"]["Crop"]["user"]["minX"] )
__children["Rectangle_Column"]["Expression1"]["__uiPosition"].setValue( imath.V2f( -20.0763054, -121.665619 ) )
__children["Rectangle_Column"]["BoxIn"]["__in"].setInput( __children["Rectangle_Column"]["in"] )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxIn"]["__in"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxIn"]["__in"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxIn"]["__in"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxIn"]["__in"], 'description', 'The input image' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxIn"]["__in"], 'plugValueWidget:type', '' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxIn"]["__in"], 'noduleLayout:spacing', 2.0 )
__children["Rectangle_Column"]["BoxIn"]["__uiPosition"].setValue( imath.V2f( -32.1421547, -97.4371719 ) )
__children["Rectangle_Column"]["BoxOut"]["in"].setInput( __children["Rectangle_Column"]["Merge"]["out"] )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxOut"]["__out"], 'deletable', True )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxOut"]["__out"], 'renameable', True )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxOut"]["__out"], 'nodule:type', 'GafferUI::StandardNodule' )
Gaffer.Metadata.registerValue( __children["Rectangle_Column"]["BoxOut"]["__out"], 'description', 'The output image generated by this node.' )
__children["Rectangle_Column"]["BoxOut"]["__uiPosition"].setValue( imath.V2f( -29.141777, -138.593414 ) )
__children["Rectangle_Column"]["__uiPosition"].setValue( imath.V2f( -33.6417694, -105.93718 ) )
__children["Rectangle_ColumnLine"]["out"].setInput( __children["Rectangle_ColumnLine"]["__merge"]["out"] )
__children["Rectangle_ColumnLine"]["in"].setInput( __children["Rectangle_Column"]["out"] )
__children["Rectangle_ColumnLine"]["color"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["Rectangle_ColumnLine"]["area"].setValue( imath.Box2f( imath.V2f( 224, 133 ), imath.V2f( 224, 139 ) ) )
__children["Rectangle_ColumnLine"]["lineWidth"].setValue( 2.0 )
__children["Rectangle_ColumnLine"]["__uiPosition"].setValue( imath.V2f( -33.6417694, -114.269211 ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'noduleLayout:customGadget:addButtonTop:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'noduleLayout:customGadget:addButtonBottom:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'noduleLayout:customGadget:addButtonLeft:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'noduleLayout:customGadget:addButtonRight:visible', False )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'uiEditor:emptySections', IECore.StringVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'uiEditor:emptySectionIndices', IECore.IntVectorData( [  ] ) )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'description', 'Adds text to an image, with additional heading control. The first line can be formatted differently to appear like a heading.\n\nHeading can be colored separately. If the Heading Font plug points to a font file on disk, the first line of the text will be in that font. If left blank, it will fall back to the font determined by the Body Font plug.' )
Gaffer.Metadata.registerValue( __children["TextHeading_Column"], 'documentation:url', '' )
__children["TextHeading_Column"]["out"].setInput( __children["TextHeading_Column"]["BoxOut"]["__out"] )
__children["TextHeading_Column"]["in"].setInput( __children["Rectangle_ColumnLine"]["out"] )
__children["TextHeading_Column"]["text"].setValue( 'Column:\nA connected plug.' )
__children["TextHeading_Column"]["Translate"].setValue( imath.V2f( 196, -172 ) )
__children["TextHeading_Column"]["headingFont"].setValue( 'VeraBd.ttf' )
__children["TextHeading_Column"]["headingColor"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["TextHeading_Column"]["bodyColor"].setValue( imath.Color4f( 0, 0.862699986, 0, 1 ) )
__children["TextHeading_Column"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 300, 300 ) ) )
__children["TextHeading_Column"]["__uiPosition"].setValue( imath.V2f( -33.6417694, -122.601242 ) )
__children["Shuffle"]["in"].setInput( __children["ImageReader"]["out"] )
__children["Shuffle"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel"]["in"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel1"]["in"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel2"]["in"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle"]["channels"]["channel3"]["in"].setValue( '__white' )
__children["Shuffle"]["__uiPosition"].setValue( imath.V2f( -28.6653671, 10.5433044 ) )
__children["Express"]["__engine"].setValue( 'python' )
__children["Express"]["__expression"].setValue( 'import GafferImage\n\ndisplayWindow = parent["__in"]["p0"].getDisplayWindow()\nwidth = int( displayWindow.size().x * 1.827676240208877 )\nheight = displayWindow.size().y\nparent["__out"]["p0"] = GafferImage.Format( width, height, 1.000 )' )
__children["Rectangle_Column"]["Expression1"]["__engine"].setValue( 'python' )
__children["Rectangle_Column"]["Expression1"]["__expression"].setValue( 'import math\nimport imath\n\ndisplayWindow = parent["__in"]["p2"].getDisplayWindow()\n\nwidth = displayWindow.size().x\nheight = displayWindow.size().y\n\nminX = round( max( 0, min( 1, parent["__in"]["p4"] ) ) * width )\nmaxX = round( ( 1 - max( 0, min( 1, 1 - parent["__in"]["p1"] ) ) ) * width )\nminY = round( max( 0, min( 1, parent["__in"]["p3"] ) ) * height )\nmaxY = round( ( 1 - max( 0, min( 1, 1 - parent["__in"]["p0"] ) ) ) * height )\n\nparent["__out"]["p0"] = imath.Box2i( imath.V2i( minX, minY ), imath.V2i( maxX, maxY ) )' )


del __children

