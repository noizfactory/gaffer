import Gaffer
import GafferDispatch
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 4, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ImageReader_Before"] = GafferImage.ImageReader( "ImageReader_Before" )
parent.addChild( __children["ImageReader_Before"] )
__children["ImageReader_Before"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageReader_After"] = GafferImage.ImageReader( "ImageReader_After" )
parent.addChild( __children["ImageReader_After"] )
__children["ImageReader_After"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageWriter"] = GafferImage.ImageWriter( "ImageWriter" )
parent.addChild( __children["ImageWriter"] )
__children["ImageWriter"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Crop_Before"] = GafferImage.Crop( "Crop_Before" )
parent.addChild( __children["Crop_Before"] )
__children["Crop_Before"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Crop_After"] = GafferImage.Crop( "Crop_After" )
parent.addChild( __children["Crop_After"] )
__children["Crop_After"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Crop_Final"] = GafferImage.Crop( "Crop_Final" )
parent.addChild( __children["Crop_Final"] )
__children["Crop_Final"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ImageTransform"] = GafferImage.ImageTransform( "ImageTransform" )
parent.addChild( __children["ImageTransform"] )
__children["ImageTransform"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"] = GafferImage.Shuffle( "Shuffle" )
parent.addChild( __children["Shuffle"] )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle1"] = GafferImage.Shuffle( "Shuffle1" )
parent.addChild( __children["Shuffle1"] )
__children["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel1", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle1"]["channels"].addChild( GafferImage.Shuffle.ChannelPlug( "channel3", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Shuffle1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 51086 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["ImageReader_Before"]["refreshCount"].setValue( 3 )
__children["ImageReader_Before"]["__uiPosition"].setValue( imath.V2f( 83.1925507, 26.8839073 ) )
__children["ImageReader_After"]["refreshCount"].setValue( 4 )
__children["ImageReader_After"]["__uiPosition"].setValue( imath.V2f( 97.9847031, 35.0472107 ) )
__children["Merge"]["in"][0].setInput( __children["Crop_Before"]["out"] )
__children["Merge"]["in"][1].setInput( __children["ImageTransform"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( 92.0950928, 2.39096117 ) )
__children["ImageWriter"]["in"].setInput( __children["Crop_Final"]["out"] )
__children["ImageWriter"]["__uiPosition"].setValue( imath.V2f( 90.6006622, -13.9372768 ) )
__children["Crop_Before"]["in"].setInput( __children["Shuffle"]["out"] )
__children["Crop_Before"]["area"].setValue( imath.Box2i( imath.V2i( 100, 35 ), imath.V2i( 700, 365 ) ) )
__children["Crop_Before"]["__uiPosition"].setValue( imath.V2f( 83.8388824, 10.5553627 ) )
__children["Crop_After"]["in"].setInput( __children["Shuffle1"]["out"] )
__children["Crop_After"]["area"].setValue( imath.Box2i( imath.V2i( 200, 35 ), imath.V2i( 600, 365 ) ) )
__children["Crop_After"]["__uiPosition"].setValue( imath.V2f( 97.6663361, 18.7190857 ) )
__children["Crop_Final"]["in"].setInput( __children["Merge"]["out"] )
__children["Crop_Final"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1050, 330 ) ) )
__children["Crop_Final"]["__uiPosition"].setValue( imath.V2f( 92.0986328, -5.77317095 ) )
__children["ImageTransform"]["in"].setInput( __children["Crop_After"]["out"] )
__children["ImageTransform"]["transform"]["translate"].setValue( imath.V2f( 650, 0 ) )
__children["ImageTransform"]["__uiPosition"].setValue( imath.V2f( 97.3471832, 10.5550232 ) )
__children["Shuffle"]["in"].setInput( __children["ImageReader_Before"]["out"] )
__children["Shuffle"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel"]["in"].setValue( 'R' )
__children["Shuffle"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel1"]["in"].setValue( 'G' )
__children["Shuffle"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel2"]["in"].setValue( 'B' )
__children["Shuffle"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle"]["channels"]["channel3"]["in"].setValue( '__white' )
__children["Shuffle"]["__uiPosition"].setValue( imath.V2f( 83.5154572, 18.7196999 ) )
__children["Shuffle1"]["in"].setInput( __children["ImageReader_After"]["out"] )
__children["Shuffle1"]["channels"]["channel"]["out"].setValue( 'R' )
__children["Shuffle1"]["channels"]["channel"]["in"].setValue( 'R' )
__children["Shuffle1"]["channels"]["channel1"]["out"].setValue( 'G' )
__children["Shuffle1"]["channels"]["channel1"]["in"].setValue( 'G' )
__children["Shuffle1"]["channels"]["channel2"]["out"].setValue( 'B' )
__children["Shuffle1"]["channels"]["channel2"]["in"].setValue( 'B' )
__children["Shuffle1"]["channels"]["channel3"]["out"].setValue( 'A' )
__children["Shuffle1"]["channels"]["channel3"]["in"].setValue( '__white' )
__children["Shuffle1"]["__uiPosition"].setValue( imath.V2f( 97.9860077, 26.8831482 ) )


del __children

