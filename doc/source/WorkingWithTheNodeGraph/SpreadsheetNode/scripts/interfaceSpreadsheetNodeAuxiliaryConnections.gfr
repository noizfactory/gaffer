import Gaffer
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 56, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Spreadsheet"] = Gaffer.Spreadsheet( "Spreadsheet" )
parent.addChild( __children["Spreadsheet"] )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "as:cfg:passes", Gaffer.IntPlug( "value", defaultValue = 1, ), False, "renderPasses", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "as:cfg:passes", Gaffer.IntPlug( "value", defaultValue = 1, ), False, "renderPasses1", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.NameValuePlug( "as:cfg:passes", Gaffer.IntPlug( "value", defaultValue = 1, ), False, "renderPasses2", Gaffer.Plug.Flags.Default ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "enabled", defaultValue = True, ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "enabled1", defaultValue = True, ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "enabled2", defaultValue = True, ) )
__children["Spreadsheet"]["rows"].addColumn( Gaffer.BoolPlug( "enabled3", defaultValue = True, ) )
__children["Spreadsheet"]["rows"].addRows( 1 )
__children["Spreadsheet"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text"] = GafferImage.Text( "Text" )
parent.addChild( __children["Text"] )
__children["Text"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text1"] = GafferImage.Text( "Text1" )
parent.addChild( __children["Text1"] )
__children["Text1"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text2"] = GafferImage.Text( "Text2" )
parent.addChild( __children["Text2"] )
__children["Text2"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text3"] = GafferImage.Text( "Text3" )
parent.addChild( __children["Text3"] )
__children["Text3"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Dot"] = Gaffer.Dot( "Dot" )
parent.addChild( __children["Dot"] )
__children["Dot"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderPasses"]["value"], 'description', 'Number of render passes.\nWhen using photon mapping this is the number of\nprogressive refinement passes used.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderPasses"]["value"], 'label', 'Passes' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderPasses1"]["value"], 'description', 'Number of render passes.\nWhen using photon mapping this is the number of\nprogressive refinement passes used.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderPasses1"]["value"], 'label', 'Passes' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderPasses2"]["value"], 'description', 'Number of render passes.\nWhen using photon mapping this is the number of\nprogressive refinement passes used.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["renderPasses2"]["value"], 'label', 'Passes' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled"]["value"], 'description', 'Turns the node on and off.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled1"]["value"], 'description', 'Turns the node on and off.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled1"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled2"]["value"], 'description', 'Turns the node on and off.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled2"]["value"], 'nodule:type', '' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled3"]["value"], 'description', 'Turns the node on and off.' )
Gaffer.Metadata.registerValue( __children["Spreadsheet"]["rows"][0]["cells"]["enabled3"]["value"], 'nodule:type', '' )
__children["Spreadsheet"]["__uiPosition"].setValue( imath.V2f( 3.72585535, 11.8082695 ) )
__children["Text"]["out"].setInput( __children["Text"]["__merge"]["out"] )
__children["Text"]["enabled"].setInput( __children["Spreadsheet"]["out"]["enabled"] )
__children["Text"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["Text"]["__uiPosition"].setValue( imath.V2f( 32.6702309, 19.7550888 ) )
__children["Text1"]["out"].setInput( __children["Text1"]["__merge"]["out"] )
__children["Text1"]["enabled"].setInput( __children["Spreadsheet"]["out"]["enabled1"] )
__children["Text1"]["in"].setInput( __children["Text"]["out"] )
__children["Text1"]["__uiPosition"].setValue( imath.V2f( 32.6702309, 14.0910244 ) )
__children["Text2"]["out"].setInput( __children["Text2"]["__merge"]["out"] )
__children["Text2"]["enabled"].setInput( __children["Spreadsheet"]["out"]["enabled2"] )
__children["Text2"]["in"].setInput( __children["Text1"]["out"] )
__children["Text2"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["Text2"]["__uiPosition"].setValue( imath.V2f( 32.6702309, 8.4269619 ) )
__children["Text3"]["out"].setInput( __children["Text3"]["__merge"]["out"] )
__children["Text3"]["enabled"].setInput( __children["Spreadsheet"]["out"]["enabled3"] )
__children["Text3"]["in"].setInput( __children["Text2"]["out"] )
__children["Text3"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 1920, 1080 ) ) )
__children["Text3"]["__uiPosition"].setValue( imath.V2f( 32.6702309, 2.76289964 ) )
__children["Dot"]["__uiPosition"].setValue( imath.V2f( 15.148015, 11.4757519 ) )


del __children

