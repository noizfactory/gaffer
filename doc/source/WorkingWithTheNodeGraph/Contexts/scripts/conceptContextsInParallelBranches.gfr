import Gaffer
import GafferImage
import IECore
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 57, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Text_Left"] = GafferImage.Text( "Text_Left" )
parent.addChild( __children["Text_Left"] )
__children["Text_Left"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"] = Gaffer.Expression( "Expression" )
parent.addChild( __children["Expression"] )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p0", direction = Gaffer.Plug.Direction.Out, defaultValue = 'Hello World', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"]["__out"].addChild( Gaffer.StringPlug( "p1", direction = Gaffer.Plug.Direction.Out, defaultValue = 'Hello World', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Expression"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Text_Right"] = GafferImage.Text( "Text_Right" )
parent.addChild( __children["Text_Right"] )
__children["Text_Right"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables_Apples"] = Gaffer.ContextVariables( "ContextVariables_Apples" )
parent.addChild( __children["ContextVariables_Apples"] )
__children["ContextVariables_Apples"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContextVariables_Apples"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_Apples"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["ContextVariables_Oranges"] = Gaffer.ContextVariables( "ContextVariables_Oranges" )
parent.addChild( __children["ContextVariables_Oranges"] )
__children["ContextVariables_Oranges"].setup( GafferImage.ImagePlug( "in", ) )
__children["ContextVariables_Oranges"]["variables"].addChild( Gaffer.NameValuePlug( "", Gaffer.StringPlug( "value", defaultValue = '', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), True, "member1", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["ContextVariables_Oranges"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"] = GafferImage.Merge( "Merge" )
parent.addChild( __children["Merge"] )
__children["Merge"]["in"].addChild( GafferImage.ImagePlug( "in2", flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Merge"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 49898 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["defaultFormat"].setValue( GafferImage.Format( 1024, 256, 1.000 ) )
Gaffer.Metadata.registerValue( __children["defaultFormat"], 'formatPlugValueWidget:mode', 'custom' )
__children["Text_Left"]["out"].setInput( __children["Text_Left"]["__merge"]["out"] )
__children["Text_Left"]["text"].setInput( __children["Expression"]["__out"]["p0"] )
__children["Text_Left"]["size"]["x"].setValue( 36 )
__children["Text_Left"]["size"]["y"].setInput( __children["Text_Left"]["size"]["x"] )
__children["Text_Left"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 0, 0 ) ) )
__children["Text_Left"]["verticalAlignment"].setValue( 2 )
__children["Text_Left"]["transform"]["translate"].setValue( imath.V2f( 100, 0 ) )
__children["Text_Left"]["__uiPosition"].setValue( imath.V2f( -5.53511238, 15.5690584 ) )
__children["Expression"]["__uiPosition"].setValue( imath.V2f( 3.15603089, 15.4835949 ) )
__children["Text_Right"]["out"].setInput( __children["Text_Right"]["__merge"]["out"] )
__children["Text_Right"]["text"].setInput( __children["Expression"]["__out"]["p1"] )
__children["Text_Right"]["size"]["x"].setValue( 36 )
__children["Text_Right"]["size"]["y"].setInput( __children["Text_Right"]["size"]["x"] )
__children["Text_Right"]["area"].setValue( imath.Box2i( imath.V2i( 0, 0 ), imath.V2i( 0, 0 ) ) )
__children["Text_Right"]["horizontalAlignment"].setValue( 1 )
__children["Text_Right"]["verticalAlignment"].setValue( 2 )
__children["Text_Right"]["transform"]["translate"].setValue( imath.V2f( -50, 0 ) )
__children["Text_Right"]["__uiPosition"].setValue( imath.V2f( 12.2377625, 15.5690584 ) )
__children["ContextVariables_Apples"]["variables"]["member1"]["name"].setValue( 'apples' )
__children["ContextVariables_Apples"]["variables"]["member1"]["value"].setValue( 'apples' )
__children["ContextVariables_Apples"]["in"].setInput( __children["Text_Left"]["out"] )
__children["ContextVariables_Apples"]["__uiPosition"].setValue( imath.V2f( -5.53511238, 9.90499592 ) )
__children["ContextVariables_Oranges"]["variables"]["member1"]["name"].setValue( 'oranges' )
__children["ContextVariables_Oranges"]["variables"]["member1"]["value"].setValue( 'oranges' )
__children["ContextVariables_Oranges"]["in"].setInput( __children["Text_Right"]["out"] )
__children["ContextVariables_Oranges"]["__uiPosition"].setValue( imath.V2f( 12.2377625, 9.90499592 ) )
__children["Merge"]["in"][0].setInput( __children["ContextVariables_Apples"]["out"] )
__children["Merge"]["in"][1].setInput( __children["ContextVariables_Oranges"]["out"] )
__children["Merge"]["operation"].setValue( 8 )
__children["Merge"]["__uiPosition"].setValue( imath.V2f( 3.08559036, 1.74093342 ) )
__children["Expression"]["__engine"].setValue( 'python' )
__children["Expression"]["__expression"].setValue( 'apples = context.get( "apples", "<none>" )\noranges = context.get( "oranges", "<none>" )\n\nparent["__out"]["p0"] = apples + " to " + oranges\nparent["__out"]["p1"] = apples + " to " + oranges\n' )


del __children

