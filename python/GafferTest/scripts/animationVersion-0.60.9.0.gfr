import Gaffer
import GafferImage
import GafferScene
import imath

Gaffer.Metadata.registerValue( parent, "serialiser:milestoneVersion", 0, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:majorVersion", 60, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:minorVersion", 9, persistent=False )
Gaffer.Metadata.registerValue( parent, "serialiser:patchVersion", 0, persistent=False )

__children = {}

parent["variables"].addChild( Gaffer.NameValuePlug( "image:catalogue:port", Gaffer.IntPlug( "value", defaultValue = 0, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "imageCataloguePort", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:name", Gaffer.StringPlug( "value", defaultValue = 'default', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectName", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
parent["variables"].addChild( Gaffer.NameValuePlug( "project:rootDirectory", Gaffer.StringPlug( "value", defaultValue = '$HOME/gaffer/projects/${project:name}', flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ), "projectRootDirectory", Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) )
__children["defaultFormat"] = GafferImage.FormatPlug( "defaultFormat", defaultValue = GafferImage.Format( 1920, 1080, 1.000 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, )
parent.addChild( __children["defaultFormat"] )
__children["Plane"] = GafferScene.Plane( "Plane" )
parent.addChild( __children["Plane"] )
__children["Plane"]["user"].addChild( Gaffer.BoolPlug( "BoolPlug", defaultValue = False, flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Plane"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
__children["Animation"] = Gaffer.Animation( "Animation" )
parent.addChild( __children["Animation"] )
__children["Animation"]["curves"].addChild( Gaffer.Animation.CurvePlug( "curve0", flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.AcceptsInputs, ) )
__children["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 0, 0, Gaffer.Animation.Type.Linear ) )
__children["Animation"]["curves"]["curve0"].addKey( Gaffer.Animation.Key( 1, 1, Gaffer.Animation.Type.Linear ) )
__children["Animation"]["curves"].addChild( Gaffer.Animation.CurvePlug( "curve1", flags = ( Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic ) & ~Gaffer.Plug.Flags.AcceptsInputs, ) )
__children["Animation"]["curves"]["curve1"].addKey( Gaffer.Animation.Key( 0, 0, Gaffer.Animation.Type.Step ) )
__children["Animation"]["curves"]["curve1"].addKey( Gaffer.Animation.Key( 1, 1, Gaffer.Animation.Type.Step ) )
__children["Animation"].addChild( Gaffer.V2fPlug( "__uiPosition", defaultValue = imath.V2f( 0, 0 ), flags = Gaffer.Plug.Flags.Default | Gaffer.Plug.Flags.Dynamic, ) )
parent["variables"]["imageCataloguePort"]["value"].setValue( 42770 )
Gaffer.Metadata.registerValue( parent["variables"]["imageCataloguePort"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectName"]["name"], 'readOnly', True )
Gaffer.Metadata.registerValue( parent["variables"]["projectRootDirectory"]["name"], 'readOnly', True )
__children["Plane"]["user"]["BoolPlug"].setInput( __children["Animation"]["curves"]["curve1"]["out"] )
Gaffer.Metadata.registerValue( __children["Plane"]["user"]["BoolPlug"], 'nodule:type', '' )
__children["Plane"]["transform"]["translate"]["x"].setInput( __children["Animation"]["curves"]["curve0"]["out"] )
__children["Plane"]["__uiPosition"].setValue( imath.V2f( -37.2999992, 5.20000029 ) )
__children["Animation"]["__uiPosition"].setValue( imath.V2f( -47.7995605, 5.19918966 ) )


del __children
